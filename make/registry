#!/usr/bin/env bash

set -o errexit -o nounset

: "${GIT_ROOT:=$(git rev-parse --show-toplevel)}"
source "${GIT_ROOT}/make/include/defaults"

DOCKER_AUTH_PORT=${DOCKER_AUTH_PORT:-'5001'}
DOCKER_AUTH_IMAGE=${DOCKER_AUTH_IMAGE:-'cesanta/docker_auth'}
DOCKER_AUTH_NAME=${DOCKER_AUTH_NAME:-'docker_auth'}

REGISTRY_PORT=${REGISTRY_PORT:-'5000'}
REGISTRY_IMAGE=${REGISTRY_IMAGE:-'registry:2'}
REGISTRY_NAME=${REGISTRY_NAME:-'registry'}

AUTH_DIR=/tmp/scf/auth
CERTS_DIR=/tmp/scf/certs

docker rm -f ${DOCKER_AUTH_NAME} ${REGISTRY_NAME} 2>/dev/null || true
mkdir -p ${AUTH_DIR}

if [ -z "${FISSILE_DOCKER_USERNAME:-}" ]; then
    docker run --detach \
           --publish ${REGISTRY_PORT}:5000 \
           --restart always \
           --name ${REGISTRY_NAME} \
           ${REGISTRY_IMAGE}

elif [ "${FISSILE_DOCKER_AUTH:-}" = "basic" ]; then
    docker run --rm \
           --entrypoint htpasswd \
           ${REGISTRY_IMAGE} \
           -Bbn "${FISSILE_DOCKER_USERNAME}" "${FISSILE_DOCKER_PASSWORD:-}" \
           > ${AUTH_DIR}/htpasswd

    docker run --detach \
           --publish ${REGISTRY_PORT}:5000 \
           --restart always \
           --name ${REGISTRY_NAME} \
           -v ${AUTH_DIR}:/auth:ro \
           -v ${CERTS_DIR}:/certs:ro \
           -e REGISTRY_AUTH=htpasswd \
           -e REGISTRY_AUTH_HTPASSWD_REALM="Registry Realm" \
           -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
           -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/router_ssl.cert \
           -e REGISTRY_HTTP_TLS_KEY=/certs/router_ssl.key \
           ${REGISTRY_IMAGE}

else
    export PASSWORD_HASH=$(docker run --rm \
                                  --entrypoint htpasswd \
                                  ${REGISTRY_IMAGE} \
                                  -Bbn "${FISSILE_DOCKER_USERNAME}" "${FISSILE_DOCKER_PASSWORD:-}" \
           )

    < bin/dev/docker_auth.yml perl -pe 's| {{USERNAME}} | $ENV{FISSILE_DOCKER_USERNAME} |egx' | \
        perl -pe 's| {{PASSWORD}} | (split /:/, $ENV{PASSWORD_HASH}, 2)[1] |egx' > ${AUTH_DIR}/docker_auth.yml

    openssl req -newkey rsa:2048 -nodes -keyout ${CERTS_DIR}/docker_auth.key -x509 -days 365  -subj / -out ${CERTS_DIR}/docker_auth.pem

    docker run --detach \
           --publish ${DOCKER_AUTH_PORT}:5001 \
           --restart=always \
           --name ${DOCKER_AUTH_NAME} \
           -v ${AUTH_DIR}:/config:ro \
           -v ${CERTS_DIR}:/certs:ro \
           ${DOCKER_AUTH_IMAGE} \
           /config/docker_auth.yml

    docker run --detach \
           --publish ${REGISTRY_PORT}:5000 \
           --restart always \
           --name ${REGISTRY_NAME} \
           -v ${CERTS_DIR}:/certs:ro \
           -e REGISTRY_AUTH=token \
           -e REGISTRY_AUTH_TOKEN_REALM=https://auth.${DOMAIN}:${DOCKER_AUTH_PORT}/auth \
           -e REGISTRY_AUTH_TOKEN_SERVICE="registry.${DOMAIN}:${REGISTRY_PORT}" \
           -e REGISTRY_AUTH_TOKEN_ISSUER="SCF Auth Service" \
           -e REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/docker_auth.pem \
           -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/router_ssl.cert \
           -e REGISTRY_HTTP_TLS_KEY=/certs/router_ssl.key \
           ${REGISTRY_IMAGE}
fi
