#!/usr/bin/env bash

set -o errexit -o nounset

if [ -z "${INGRESS_CONTROLLER:-}" ]; then
  exit
fi

: "${GIT_ROOT:=$(git rev-parse --show-toplevel)}"
source "${GIT_ROOT}/make/include/defaults"
source "${GIT_ROOT}/make/include/secrets"
source "${GIT_ROOT}/make/include/wait_for"

printf "Waiting for UAA secret generation job to finish... "
wait_for_job -n "${UAA_NAMESPACE}" -s '.metadata.labels["app.kubernetes.io/component"] | test("^secret-generation-[0-9]+$")'
printf "ok\\n"

uaa_secret_name="ingress-tls"

printf "Creating ${uaa_secret_name} on the ${UAA_NAMESPACE} namespace...\\n"

uaa_tls_cert=$(get_secret "${UAA_NAMESPACE}" "uaa" "UAA_SERVER_CERT" | base64 -w 0)
uaa_tls_key=$(get_secret "${UAA_NAMESPACE}" "uaa" "UAA_SERVER_CERT_KEY" | base64 -w 0)

kubectl apply --filename - <<EOF
---
apiVersion: "v1"
kind: "Secret"
type: kubernetes.io/tls
metadata:
  name: "${uaa_secret_name}"
  namespace: "${UAA_NAMESPACE}"
data:
  tls.crt: "${uaa_tls_cert}"
  tls.key: "${uaa_tls_key}"
EOF

printf "Waiting for CF secret generation job to finish... "
wait_for_job -n "${CF_NAMESPACE}" -s '.metadata.labels["app.kubernetes.io/component"] | test("^secret-generation-[0-9]+$")'
printf "ok\\n"

cf_secret_name="ingress-tls"

printf "Creating ${cf_secret_name} on the ${CF_NAMESPACE} namespace...\\n"

router_tls_cert=$(get_secret "${CF_NAMESPACE}" "router" "ROUTER_SSL_CERT" | base64 -w 0)
router_tls_key=$(get_secret "${CF_NAMESPACE}" "router" "ROUTER_SSL_CERT_KEY" | base64 -w 0)

kubectl apply --filename - <<EOF
---
apiVersion: "v1"
kind: "Secret"
type: kubernetes.io/tls
metadata:
  name: "${cf_secret_name}"
  namespace: "${CF_NAMESPACE}"
data:
  tls.crt: "${router_tls_cert}"
  tls.key: "${router_tls_key}"
EOF
