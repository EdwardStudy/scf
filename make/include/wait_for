#!/usr/bin/env bash

set -o errexit -o nounset

# Flags for wait_for_job:
#   -n    namespace where the job is executed.
#   -s    jq select for filtering the job.
#   -t    time to wait between checks.
wait_for_job() {
  local namespace
  local select
  local time_to_sleep=3
  OPTIND=1
  while getopts "n:s:t:" opt "$@"; do
    case $opt in
      n)
        namespace=$OPTARG
        ;;
      s)
        select=$OPTARG
        ;;
      t)
        time_to_sleep=$OPTARG
        ;;
      \?)
        echo "Invalid option: -$OPTARG" >&2
        return 1
        ;;
      :)
        echo "Option -$OPTARG requires an argument." >&2
        return 1
        ;;
    esac
  done

  if [[ -z "${namespace:-}" ]]; then
    echo "Missing namespace. '-n' must be specified." >&2
    return 1
  fi

  if [[ -z "${select:-}" ]]; then
    echo "Missing select. '-s' must be specified." >&2
    return 1
  fi

  local kubectl_args=(
    --namespace "${namespace}"
    --output json
  )

  local jq_arg=".items[] | select(.status.succeeded == 1) | select(${select})"

  until [[ -n "$(kubectl get jobs "${kubectl_args[@]}" | jq -c "${jq_arg}")" ]]; do
    sleep "${time_to_sleep}"
  done
}
